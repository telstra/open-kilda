Internal data
* ISL reference
* BFD descriptor
* linkStatus (initial false)
* action

Internal signals
* fail

Input signals
* online
* offline
* port-up
* port-down
* enable (ISL-FSM)
* disable (ISL-FSM)
* speaker-response
* action-success
* action-fail

Output signals
* bfd-up
* bfd-down
* bfd-kill

@startuml bfd-port-FSM
title BFD port FSM

[*] --> INIT

state initChoice <<choice>>
INIT --> initChoice : history / load persistence-data

initChoice --> IDLE : [else]
initChoice --> CLEANING : [BFD-discriminator is set]

IDLE --> PREPARING : enable / save ISL reference
IDLE --> CONFLICT : port-up
IDLE --> UNOPERATIONAL : offline
IDLE : enter / report ready to setup

UNOPERATIONAL --> IDLE : online
UNOPERATIONAL --> PENDING : enable

CONFLICT --> IDLE : port-down
CONFLICT --> UNOPERATIONAL : offline
CONFLICT : enter / report conflict
CONFLICT : enable / report conflict
CONFLICT : disable / report conflict

PENDING --> UNOPERATIONAL : disable
PENDING --> PREPARING : port-down
PENDING --> CONFLICT : port-up
PENDING : enter / save ISL reference

PREPARING --> IDLE : fail
PREPARING --> INSTALLING : next
PREPARING : enter / allocate BFD-discriminator

INSTALLING --> ACTIVE : action-success
INSTALLING --> CLEANING : disable\naction-fail / report error
INSTALLING --> FAIL : offline
INSTALLING --> TERMINATE : kill
INSTALLING : enter / make BFD-setup action
INSTALLING : speaker-response / proxy to action
INSTALLING : port-up / proxy to action
INSTALLING : port-down / proxy to action

CLEANING --> IDLE : action-success / release BFD-descriptor
CLEANING --> FAIL : action-fail / report error
CLEANING --> PENDING_CLEANING : offline
CLEANING --> HOUSEKEEPING : kill
CLEANING : enter / make BFD-remove action
CLEANING : speaker-response / proxy to action
CLEANING : port-up / proxy to action
CLEANING : port-down / proxy to action

state ACTIVE {
    [*] --> UP

    UP -r-> DOWN : port-down
    UP --> OFFLINE : offline
    UP : enter / emit bfd-up
    UP : enter / set linkStatus = UP

    DOWN -l-> UP : port-up
    DOWN --> OFFLINE : offline
    DOWN : enter / emit bfd-down
    DOWN : enter / set linkStatus = DOWN

    OFFLINE --> UP : port-up
    OFFLINE --> DOWN : port-down
    OFFLINE : enter / emit bfd-kill
}
ACTIVE --> CLEANING : disable
ACTIVE --> TERMINATE : kill
ACTIVE : enter / report setup complete
ACTIVE : exit / emit bfd-kill

TERMINATE --> HOUSEKEEPING : next
TERMINATE : enter / make BFD-remove action

HOUSEKEEPING --> [*] : action-success / release BFD-descriptor\naction-fail / report error
HOUSEKEEPING : enter / action.updateLinkStatus(DOWN)
HOUSEKEEPING : speaker-response / proxy to action

FAIL --> RECOVERY : port-down
FAIL : enable / report malfunction
FAIL : disable / report malfunction

PENDING_CLEANING --> CLEANING : port-up / set linkStatus = UP\nport-down / set linkStatus DOWN

RECOVERY --> INSTALLING : action-success
RECOVERY --> FAIL : action-fail / report error\noffline
RECOVERY : enter / make BFD-remove action
RECOVERY : speaker-response / proxy to action
RECOVERY : port-up / proxy to action
RECOVERY : port-down / proxy to action

@enduml
