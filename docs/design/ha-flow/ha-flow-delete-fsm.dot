digraph {
    compound = true;
    subgraph cluster_StateMachine {
    label = "org.openkilda.wfm.topology.flowhs.fsm.haflow.delete.HaFlowDeleteFsm";
    PATHS_REMOVED [label = "PATHS_REMOVED"];
    INITIALIZED [label = "INITIALIZED"];
    RULES_REMOVED [label = "RULES_REMOVED"];
    HA_FLOW_REMOVED [label = "HA_FLOW_REMOVED"];
    REMOVING_RULES [label = "REMOVING_RULES"];
    RESOURCES_DEALLOCATED [label = "RESOURCES_DEALLOCATED"];
    REMOVING_HA_FLOW [label = "REMOVING_HA_FLOW"];
    NOTIFY_FLOW_MONITOR [label = "NOTIFY_FLOW_MONITOR"];
    FINISHED [label = "FINISHED"];
    NOTIFY_HA_FLOW_STATS [label = "NOTIFY_HA_FLOW_STATS"];
    HA_FLOW_VALIDATED [label = "HA_FLOW_VALIDATED"];
    DEALLOCATING_RESOURCES [label = "DEALLOCATING_RESOURCES"];
    NOTIFY_FLOW_MONITOR_WITH_ERROR [label = "NOTIFY_FLOW_MONITOR_WITH_ERROR"];
    FINISHED_WITH_ERROR [label = "FINISHED_WITH_ERROR"];
    REVERTING_HA_FLOW_STATUS [label = "REVERTING_HA_FLOW_STATUS"];

    PATHS_REMOVED -> DEALLOCATING_RESOURCES [label = "NEXT"];
    PATHS_REMOVED -> DEALLOCATING_RESOURCES [label = "ERROR"];
    INITIALIZED -> HA_FLOW_VALIDATED [label = "NEXT"];
    INITIALIZED -> FINISHED_WITH_ERROR [label = "TIMEOUT"];
    RULES_REMOVED -> NOTIFY_HA_FLOW_STATS [label = "NEXT"];
    HA_FLOW_REMOVED -> NOTIFY_FLOW_MONITOR [label = "NEXT"];
    HA_FLOW_REMOVED -> NOTIFY_FLOW_MONITOR_WITH_ERROR [label = "ERROR"];
    REMOVING_RULES -> REMOVING_RULES [label = "RESPONSE_RECEIVED"];
    REMOVING_RULES -> RULES_REMOVED [label = "RULES_REMOVED"];
    REMOVING_RULES -> REVERTING_HA_FLOW_STATUS [label = "ERROR"];
    RESOURCES_DEALLOCATED -> REMOVING_HA_FLOW [label = "NEXT"];
    RESOURCES_DEALLOCATED -> REMOVING_HA_FLOW [label = "ERROR"];
    REMOVING_HA_FLOW -> HA_FLOW_REMOVED [label = "NEXT"];
    NOTIFY_FLOW_MONITOR -> FINISHED [label = "NEXT"];
    NOTIFY_HA_FLOW_STATS -> PATHS_REMOVED [label = "NEXT"];
    HA_FLOW_VALIDATED -> REMOVING_RULES [label = "NEXT"];
    HA_FLOW_VALIDATED -> REVERTING_HA_FLOW_STATUS [label = "TIMEOUT"];
    HA_FLOW_VALIDATED -> REVERTING_HA_FLOW_STATUS [label = "ERROR"];
    DEALLOCATING_RESOURCES -> RESOURCES_DEALLOCATED [label = "NEXT"];
    NOTIFY_FLOW_MONITOR_WITH_ERROR -> FINISHED_WITH_ERROR [label = "NEXT"];
    REVERTING_HA_FLOW_STATUS -> NOTIFY_FLOW_MONITOR_WITH_ERROR [label = "NEXT"];}}
