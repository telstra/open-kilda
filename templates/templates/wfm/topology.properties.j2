parallelism = 1
workers = 1

zookeeper.hosts = {{ zookeeper_hosts }}
zookeeper.session.timeout = 5
zookeeper.connect.timeout = 5

kafka.hosts = {{ kafka_hosts }}
kafka.partitions.default = 1
kafka.replication.default = 3
kafka.topic.ctrl = {{ kafka_topic_ctrl }}
kafka.topic.flow = {{ kafka_topic_flow }}
kafka.topic.health.check = {{ kafka_topic_health_check }}
kafka.topic.northbound = {{ kafka_topic_northbound }}
kafka.topic.opentsdb = {{ kafka_topic_opentsdb }}
kafka.topic.simulator = {{ kafka_topic_simulator }}
kafka.topic.speaker = {{ kafka_topic_speaker }}
kafka.topic.stats = {{ kafka_topic_stats }}
kafka.topic.topo.cache = {{ kafka_topic_topo_cache }}
kafka.topic.topo.disco = {{ kafka_topic_topo_disco }}
kafka.topic.topo.eng = {{ kafka_topic_topo_eng }}

opentsdb.hosts = {{ opentsdb_hosts }}
opentsdb.timeout = 30
opentsdb.num.spouts = 5
opentsdb.num.opentsdbfilterbolt = 10
opentsdb.num.opentsdbbolt = 10
opentsdb.workers.opentsdbolt = 20
opentsdb.num.datapointparserbolt = 1
opentsdb.workers.datapointparserbolt = 2
opentsdb.batch.size = 50
opentsdb.flush.interval = 1

neo4j.hosts = {{ neo4j_hosts }}
neo4j.user = {{ neo4j_user }}
neo4j.pswd = {{ neo4j_password }}

filter.directory =
logger.level = INFO
logger.watermark =

#######
# Discovery
# - discovery.interval = how many bolt ticks between ISL discovery / health checks
# - discovery.timeout = at which point do we send an ISL Failure (if it is an ISL)
#       - NB: the number is in "ticks", not "attempts" .. attempts = timeout/interval
# - discovery.limit = at what point do we stop sending? -1 means never ..
# - discovery.speaker-failure-timeout - after this amount of seconds without a
#   message from speaker it will be marked as unavailable
discovery.interval = {{ discovery_interval }}
discovery.timeout = {{ discovery_timeout }}
discovery.limit = {{ discovery_limit }}
discovery.speaker-failure-timeout = 5

local = no
local.execution.time = 10
