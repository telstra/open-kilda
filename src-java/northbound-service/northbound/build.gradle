plugins {
    id("org.springframework.boot") version "2.7.18"
}

configurations {
    // This conflicts with spring-boot-starter-log4j2
    implementation.exclude module: 'spring-boot-starter-logging'
}

compileJava.options.compilerArgs += '-Amapstruct.unmappedTargetPolicy=ERROR'

description = 'Northbound Service'

configurations.configureEach {
    //LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
}

dependencies {
    implementation(platform('org.springframework:spring-framework-bom:6.0.6'))
    implementation(platform('org.springframework.boot:spring-boot-dependencies:3.1.0'))

    implementation project(':northbound-api')
    implementation project(':flowhs-messaging')
    implementation project(':nbworker-messaging')
    implementation project(':swmanager-messaging')
    implementation project(':ping-messaging')
    implementation project(':floodlight-api')
    implementation project(':kilda-persistence-api')
    implementation project(':blue-green')
    runtimeOnly project(':kilda-persistence-orientdb')
    runtimeOnly project(':kilda-persistence-hibernate')
    implementation project(':kilda-configuration')
    testImplementation project(':kilda-utils:stubs')

    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.2'
    implementation('org.springframework.boot:spring-boot-starter')
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.security:spring-security-config:6.0.5'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation ('org.springframework.kafka:spring-kafka:3.1.1')
    implementation 'org.springframework:spring-webmvc'
    implementation('org.apache.kafka:kafka-clients:3.6.1')
    implementation('org.apache.kafka:kafka_2.11')
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.commons:commons-lang3'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'io.swagger.core.v3:swagger-core-jakarta:2.2.20'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    implementation 'com.google.guava:guava'
    implementation 'org.apache.commons:commons-collections4'

    implementation 'jakarta.validation:jakarta.validation-api:2.0.2'

    implementation 'org.mapstruct:mapstruct'
    implementation 'org.mapstruct:mapstruct-processor'
    annotationProcessor 'org.mapstruct:mapstruct-processor'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'commons-logging'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation project(path: ':kilda-persistence-tinkerpop', configuration: 'testArtifacts')
}

bootJar {
    mainClass = 'org.openkilda.northbound.Application'
    archiveFileName = "${archivesBaseName}.${archiveExtension.get()}"
}

bootJar.dependsOn generateVersionTxt

test {
    useJUnitPlatform()
}

configurations.all {
    resolutionStrategy {
        force('org.apache.kafka:kafka-clients:3.6.1')
    }
}
