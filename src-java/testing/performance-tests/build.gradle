plugins {
    id "groovy"
}

description = "Performance-Tests"

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform("org.springframework:spring-framework-bom:6.0.6"))
    implementation(project(":test-library"))
    implementation(project(":functional-tests"))
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("com.fasterxml.jackson.core:jackson-annotations")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml")
    implementation("org.codehaus.groovy:groovy-all:3.0.17")
    implementation("org.codehaus.gpars:gpars:1.2.1")
    implementation("org.hibernate.validator:hibernate-validator")
    implementation("org.glassfish:jakarta.el")
    implementation("org.spockframework:spock-spring:2.1-M2-groovy-3.0")
    implementation("org.spockframework:spock-core:2.1-M2-groovy-3.0")
    implementation("net.jodah:failsafe")
}

test {
    exclude "**/*"
}

tasks.register("performanceTest", Test) {
    dependsOn "compileGroovy"
    description = "Runs performance tests."
    failFast = true
    include "**/performancetests/**"
    systemProperty "tags", System.getProperty("tags")
    Properties properties = new Properties()
    File propertiesFile = file("kilda.properties.example")
    propertiesFile.withInputStream {
        properties.load(it)
    }
    properties.keys().each { k ->
        if (System.getProperty(k as String)) {
            systemProperty k as String, System.getProperty(k)
        }
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    outputs.upToDateWhen { false } //never cache results of functional tests
}
