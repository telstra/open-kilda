plugins {
    id "io.freefair.aspectj.post-compile-weaving"
    id "com.github.johnrengelman.shadow"
}

compileJava.ajc.options.compilerArgs += "-showWeaveInfo"
compileJava.ajc.options.compilerArgs += "-verbose"
def stormConstraint = "Using later versions of Jersey causes linkage error (class cast jar javax/ws/rs/client/ClientBuilder)"

description = "OpenTSDB Storm Topology"
dependencies {
    implementation(project(":base-storm-topology"))
    implementation(project(":kilda-reporting")) { transitive(false) }
    implementation(project(":blue-green")) { transitive(false) }
    implementation("org.yaml:snakeyaml:2.2")
    implementation("org.hibernate.validator:hibernate-validator")
    implementation("org.glassfish.jersey.media:jersey-media-json-jackson:2.41") because(stormConstraint)
    implementation("org.glassfish.jersey.core:jersey-client:2.41") because(stormConstraint)
    implementation("org.glassfish.jersey.inject:jersey-hk2:2.41") because(stormConstraint)
    implementation("org.glassfish.jersey.core:jersey-common:2.41") because(stormConstraint)
    implementation("org.glassfish.jersey.connectors:jersey-apache-connector:2.41") {
        because(stormConstraint)
        exclude(group: "commons-logging", module: "commons-logging") because("This conflicts with jcl-over-slf4j")
    }
    implementation("org.apache.storm:storm-opentsdb:2.5.0") {
        exclude(group: "org.apache.httpcomponents", module: "httpclient")
        exclude(group: "commons-logging", module: "commons-logging") because("This conflicts with jcl-over-slf4j")
    }


    runtimeClasspath(project(path: ":base-storm-topology", configuration: "releaseArtifacts")) because("'releaseArtifacts' shouldn't go for tests.")
    compileOnly("org.apache.storm:storm-core") {
        exclude(group: "org.yaml", module: "snakeyaml")
    }
    runtimeOnly("commons-logging:commons-logging:1.2")

    testImplementation(project(path: ":base-storm-topology", configuration: "testArtifacts"))
    testImplementation(project(path: ":kilda-persistence-tinkerpop", configuration: "testArtifacts"))

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.hamcrest:hamcrest-library")
    testImplementation("org.apache.storm:storm-core") {
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
    }
    testImplementation("org.mock-server:mockserver-netty:5.11.2") {
        exclude group: "ch.qos.logback"
    }

    compileOnly("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok-mapstruct-binding")
    testAnnotationProcessor("org.projectlombok:lombok-mapstruct-binding")
}

jar {
    manifest {
        attributes 'Main-Class': 'org.openkilda.wfm.topology.opentsdb.OpenTsdbTopology'
    }
    archiveClassifier = "original"
}

shadowJar {
    archiveClassifier = ""
    mergeServiceFiles()
}

artifacts {
    archives shadowJar
}

test {
    useJUnitPlatform()
}
