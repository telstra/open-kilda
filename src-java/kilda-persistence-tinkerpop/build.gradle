plugins {
    id "java-library"
    id "io.freefair.aspectj.post-compile-weaving"
}

compileJava.ajc.options.compilerArgs += "-showWeaveInfo"
compileJava.ajc.options.compilerArgs += "-verbose"

description = "Kilda Persistence TinkerPop Implemention"
dependencies {
    api(project(":kilda-model"))
    api(project(":kilda-persistence-api"))
    api("net.jodah:failsafe")
    api("com.syncleus.ferma:ferma:3.3.0") {
        exclude group: "org.codehaus.groovy"
    }
    aspect(project(":kilda-persistence-api"))

    implementation(project(":kilda-configuration"))
    implementation("com.google.guava:guava")
    implementation("io.netty:netty-all:4.1.86.Final")
    implementation("org.apache.tinkerpop:gremlin-core:3.3.11") {
        exclude group: "org.codehaus.groovy"
        exclude group: "io.netty:netty-all"
    }
    implementation("org.apache.tinkerpop:gremlin-driver:3.3.11") {
        exclude group: "org.codehaus.groovy"
        exclude group: "io.netty:netty-all"
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("io.netty:netty-all:4.1.86.Final")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.hamcrest:hamcrest-library")
    testImplementation("org.apache.tinkerpop:tinkergraph-gremlin:3.3.11") {
        exclude group: "org.codehaus.groovy"
        exclude group: "io.netty:netty-all"
    }

    implementation("org.aspectj:aspectjrt")
    implementation("org.mapstruct:mapstruct")
    implementation("org.mapstruct:mapstruct-processor")
    annotationProcessor("org.mapstruct:mapstruct-processor")

    compileOnly("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok-mapstruct-binding")
    testAnnotationProcessor("org.projectlombok:lombok-mapstruct-binding")
}

configurations {
    testArtifacts
}

dependencies {
    testArtifacts("org.apache.tinkerpop:tinkergraph-gremlin:3.3.11") {
        exclude(group: "org.codehaus.groovy")
        exclude(group: "io.netty:netty-all")
    }
    testArtifacts("io.netty:netty-all:4.1.86.Final")
    testArtifacts(project(":kilda-persistence-tinkerpop"))
}

tasks.register("testJar", Jar) {
    dependsOn(compileTestJava)
    archiveClassifier = "test"
    from(sourceSets.test.output)
}

artifacts {
    testArtifacts(testJar)
}

test {
    useJUnitPlatform()
}
