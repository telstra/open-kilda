plugins {
    id 'java-library'
    id 'io.freefair.aspectj.post-compile-weaving'
}

compileJava.ajc.options.compilerArgs += '-showWeaveInfo'
compileJava.ajc.options.compilerArgs += '-verbose'

description = 'Kilda Persistence TinkerPop Implemention'
dependencies {
    api project(':kilda-model')
    api project(':kilda-persistence-api')
    aspect project(':kilda-persistence-api')
    implementation project(':kilda-configuration')

    api('com.syncleus.ferma:ferma:3.3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    implementation('org.apache.tinkerpop:gremlin-core:3.4.7') {
        exclude group: 'org.codehaus.groovy'
    }
    implementation('org.apache.tinkerpop:gremlin-driver:3.4.7') {
        exclude group: 'org.codehaus.groovy'
    }

    api 'net.jodah:failsafe'
    implementation 'com.google.guava:guava'

    implementation 'org.aspectj:aspectjrt'
    implementation 'org.mapstruct:mapstruct'
    implementation 'org.mapstruct:mapstruct-processor'
    annotationProcessor 'org.mapstruct:mapstruct-processor'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation('org.apache.tinkerpop:tinkergraph-gremlin:3.4.7') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.hamcrest:hamcrest-library'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
    testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
}

configurations {
    testArtifacts
}

dependencies {
    testArtifacts('org.apache.tinkerpop:tinkergraph-gremlin:3.4.7') {
        exclude group: 'org.codehaus.groovy'
    }
    testArtifacts project(':kilda-persistence-tinkerpop')
}

task testJar(type: Jar) {
    dependsOn compileTestJava
    classifier 'test'
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}
