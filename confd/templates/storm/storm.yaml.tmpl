# Generated by confd.
# Do not change this file, all changes will be lost. Change corresponding template.

storm.zookeeper.servers:
  - "{{ getv "/kilda_zookeeper_hosts" }}"
nimbus.seeds: ["{{ getv "/kilda_storm_numbus_hosts" }}"]
drpc.port: 3772
drpc.invocations.port: 3773

supervisor.slots.ports:
  - 6700
  - 6701
  - 6702
  - 6703
  - 6704
  - 6705
  - 6706
  - 6707
  - 6708
  - 6709
  - 6710
  - 6711
  - 6712
  - 6713
  - 6714
  - 6715
  - 6716
  - 6717
  - 6718
  - 6719
  - 6720
  - 6721
  - 6722
  - 6723
  - 6724
  - 6725
  - 6726
  - 6727
  - 6728
  - 6729
  - 6730
  - 6731
  - 6732
  - 6733
  - 6734
  - 6735
  - 6736
  - 6737
  - 6738
  - 6739
  - 6740
  - 6741
  - 6742
  - 6743
  - 6744
  - 6745
  - 6746
  - 6747
  - 6748
  - 6749

## Metrics Consumers
# topology.metrics.consumer.register:
#   - class: "backtype.storm.metric.LoggingMetricsConsumer"
#     parallelism.hint: 1
#   - class: "org.mycompany.MyMetricsConsumer"
#     parallelism.hint: 1
#     argument:
#       - endpoint: "metrics-collector.mycompany.org"

## Memory settings
nimbus.childopts: "-Xmx2g -Djava.net.preferIPv4Stack=true"

worker.childopts: "-Xmx512m -Djava.net.preferIPv4Stack=true"

supervisor.childopts: "-Xmx512m -Djava.net.preferIPv4Stack=true"

ui.childopts: "-Xmx512m"

nimbus.task.timeout.secs: 30
nimbus.thrift.max_buffer_size: 2097152


#Topologies settings
topology.testing.always.try.serialize: true
topology.skip.missing.kryo.registrations: true
topology.fall.back.on.java.serialization: true

topology.max.spout.pending: 1000
topology.message.timeout.secs: 30

topology.executor.receive.buffer.size: 1024 # the queue size that needs to be processed bolts/spouts, can not be too small
topology.transfer.buffer.size: 1024

topology.spout.wait.strategy: org.apache.storm.policy.WaitStrategyProgressive
topology.spout.wait.progressive.level1.count: 1
topology.spout.wait.progressive.level2.count: 1
topology.spout.wait.progressive.level3.sleep.millis: 15

topology.bolt.wait.strategy: org.apache.storm.policy.WaitStrategyProgressive
topology.bolt.wait.progressive.level1.count: 1
topology.bolt.wait.progressive.level2.count: 1
topology.bolt.wait.progressive.level3.sleep.millis: 15

topology.backpressure.wait.strategy: org.apache.storm.policy.WaitStrategyProgressive
topology.backpressure.wait.progressive.level1.count: 1
topology.backpressure.wait.progressive.level2.count: 1
topology.backpressure.wait.progressive.level3.sleep.millis: 15

topology.stats.sample.rate: 0.05
