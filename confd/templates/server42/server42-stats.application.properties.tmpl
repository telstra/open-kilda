# Generated by confd.
# Do not change this file, all changes will be lost. Change corresponding template.

# Server configurations.
server.port={{ getv "/kilda_server42_stats_http_port" }}
# Logging
logging.level.org.openkilda.server42.stats=info
logging.file.name=logs/monitoring.log
logging.config=classpath:log4j2.xml
# Kilda related
openkilda.server42.stats.kafka.topic.flowrtt.to_storm={{ getv "/kilda_kafka_topic_server42_stats" }}

openkilda.server42.stats.zeromq.server.endpoint={{ getv "/kilda_server42_stats_zeromq_connection_host" }}

spring.devtools.add-properties=false

# Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Kafka
spring.kafka.consumer.group-id={{ getv "/kilda_server42_stats_kafka_group_id" }}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.bootstrap-servers={{ getv "/kilda_kafka_hosts" }}

# Remove all that after move to kafka with headers support
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.default.value.type=org.openkilda.server42.stats.messaging.flowrtt.Message
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.remove.type.headers=true
spring.kafka.listener.missing-topics-fatal=false

# Kafka versioning (zero_downtime)
spring.kafka.producer.properties.interceptor.classes=org.openkilda.bluegreen.kafka.interceptors.VersioningProducerInterceptor
spring.kafka.producer.properties.kafka.producer.messaging.zookeeper.connecting.string.property={{ getv "/kilda_zookeeper_hosts"}}/{{ getv "/kilda_zookeeper_state_root" }}
spring.kafka.producer.properties.kafka.producer.messaging.component.name.property={{ getv "/kilda_server42_stats_component_name" }}
spring.kafka.producer.properties.kafka.producer.messaging.run.id.property={{ getv "/kilda_server42_stats_run_id" }}

spring.kafka.consumer.properties.interceptor.classes=org.openkilda.bluegreen.kafka.interceptors.VersioningConsumerInterceptor
spring.kafka.consumer.properties.kafka.consumer.messaging.zookeeper.connecting.string.property={{ getv "/kilda_zookeeper_hosts"}}/{{ getv "/kilda_zookeeper_state_root" }}
spring.kafka.consumer.properties.kafka.consumer.messaging.component.name.property={{ getv "/kilda_server42_stats_component_name" }}
spring.kafka.consumer.properties.kafka.consumer.messaging.run.id.property={{ getv "/kilda_server42_stats_run_id" }}
