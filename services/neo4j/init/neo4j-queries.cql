CREATE CONSTRAINT ON (`config`:`config`) ASSERT `config`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_cookie`:`flow_cookie`) ASSERT `flow_cookie`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_cookie`:`flow_cookie`) ASSERT `flow_cookie`.`unmasked_cookie` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_dump`:`flow_dump`) ASSERT `flow_dump`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_event`:`flow_event`) ASSERT `flow_event`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_event`:`flow_event`) ASSERT `flow_event`.`task_id` IS UNIQUE;
CREATE CONSTRAINT ON (`flow`:`flow`) ASSERT `flow`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow`:`flow`) ASSERT `flow`.`flow_id` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_history`:`flow_history`) ASSERT `flow_history`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_meter`:`flow_meter`) ASSERT `flow_meter`.`unique_index` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_meter`:`flow_meter`) ASSERT `flow_meter`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_meter`:`flow_meter`) ASSERT `flow_meter`.`path_id` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_path`:`flow_path`) ASSERT `flow_path`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_path`:`flow_path`) ASSERT `flow_path`.`path_id` IS UNIQUE;
CREATE CONSTRAINT ON (`history_log`:`history_log`) ASSERT `history_log`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`isl`:`isl`) ASSERT `isl`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`link_props`:`link_props`) ASSERT `link_props`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`path_segment`:`path_segment`) ASSERT `path_segment`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON ( bfd_session:bfd_session ) ASSERT bfd_session.discriminator IS UNIQUE;
CREATE CONSTRAINT ON ( bfd_session:bfd_session ) ASSERT bfd_session.entityId IS UNIQUE;
CREATE CONSTRAINT ON (`port`:`port`) ASSERT `port`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`state_log`:`state_log`) ASSERT `state_log`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`switch`:`switch`) ASSERT `switch`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`switch`:`switch`) ASSERT `switch`.`name` IS UNIQUE;
CREATE CONSTRAINT ON (`transit_vlan`:`transit_vlan`) ASSERT `transit_vlan`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`transit_vlan`:`transit_vlan`) ASSERT `transit_vlan`.`vlan` IS UNIQUE;
CREATE INDEX ON :`transit_vlan`(`path_id`);
