CREATE CONSTRAINT ON (`config`:`config`) ASSERT `config`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`kilda_configuration`:`kilda_configuration`) ASSERT `kilda_configuration`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_cookie`:`flow_cookie`) ASSERT `flow_cookie`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_cookie`:`flow_cookie`) ASSERT `flow_cookie`.`unmasked_cookie` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_dump`:`flow_dump`) ASSERT `flow_dump`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_event`:`flow_event`) ASSERT `flow_event`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_event`:`flow_event`) ASSERT `flow_event`.`task_id` IS UNIQUE;
CREATE CONSTRAINT ON (`flow`:`flow`) ASSERT `flow`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow`:`flow`) ASSERT `flow`.`flow_id` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_history`:`flow_history`) ASSERT `flow_history`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_meter`:`flow_meter`) ASSERT `flow_meter`.`unique_index` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_meter`:`flow_meter`) ASSERT `flow_meter`.`entityId` IS UNIQUE;
CREATE INDEX ON :`flow_meter`(`path_id`);
CREATE CONSTRAINT ON (`mirror_group`:`mirror_group`) ASSERT `mirror_group`.`unique_index` IS UNIQUE;
CREATE CONSTRAINT ON (`mirror_group`:`mirror_group`) ASSERT `mirror_group`.`entityId` IS UNIQUE;
CREATE INDEX ON :`mirror_group`(`path_id`);
CREATE INDEX ON :`mirror_group` (`switch_id`);
CREATE INDEX ON :`mirror_group` (`flow_id`);
CREATE CONSTRAINT ON (`flow_path`:`flow_path`) ASSERT `flow_path`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`flow_path`:`flow_path`) ASSERT `flow_path`.`path_id` IS UNIQUE;
CREATE CONSTRAINT ON (`history_log`:`history_log`) ASSERT `history_log`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`isl`:`isl`) ASSERT `isl`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`link_props`:`link_props`) ASSERT `link_props`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`path_segment`:`path_segment`) ASSERT `path_segment`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON ( bfd_session:bfd_session ) ASSERT bfd_session.discriminator IS UNIQUE;
CREATE CONSTRAINT ON ( bfd_session:bfd_session ) ASSERT bfd_session.entityId IS UNIQUE;
CREATE CONSTRAINT ON (`port`:`port`) ASSERT `port`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`state_log`:`state_log`) ASSERT `state_log`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`switch`:`switch`) ASSERT `switch`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`switch`:`switch`) ASSERT `switch`.`name` IS UNIQUE;
CREATE CONSTRAINT ON (`transit_vlan`:`transit_vlan`) ASSERT `transit_vlan`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`transit_vlan`:`transit_vlan`) ASSERT `transit_vlan`.`vlan` IS UNIQUE;
CREATE INDEX ON :`transit_vlan`(`path_id`);
CREATE CONSTRAINT ON (`vxlan`:`vxlan`) ASSERT `vxlan`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`vxlan`:`vxlan`) ASSERT `vxlan`.`vni` IS UNIQUE;
CREATE CONSTRAINT ON (`switch_properties`:`switch_properties`) ASSERT `switch_properties`.`entityId` IS UNIQUE;
CREATE INDEX ON :`vxlan`(`path_id`);
CREATE INDEX ON :`flow_meter` (`switch_id`);
CREATE INDEX ON :`flow_meter` (`flow_id`);
CREATE CONSTRAINT ON (`port_history`:`port_history`) ASSERT `port_history`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`port_properties`:`port_properties`) ASSERT `port_properties`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`port_properties`:`port_properties`) ASSERT `port_properties`.`discriminator` IS UNIQUE;
CREATE CONSTRAINT ON (`switch_connected_device`:`switch_connected_device`) ASSERT `switch_connected_device`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`switch_connected_device`:`switch_connected_device`) ASSERT `switch_connected_device`.`unique_index` IS UNIQUE;
CREATE INDEX ON :`switch_connected_device` (`port_number`);
CREATE INDEX ON :`switch_connected_device` (`vlan`);
CREATE INDEX ON :`switch_connected_device` (`mac_address`);
CREATE INDEX ON :`switch_connected_device` (`type`);
CREATE INDEX ON :`switch_connected_device` (`chassis_id`);
CREATE INDEX ON :`switch_connected_device` (`port_id`);
CREATE INDEX ON :`switch_connected_device` (`ip_address`);
CREATE INDEX ON :`flow_event` (`flow_id`);
CREATE INDEX ON :`flow_history` (`task_id`);
CREATE INDEX ON :`flow_dump` (`flow_id`);
CREATE INDEX ON :`flow_dump` (`task_id`);
CREATE CONSTRAINT ON (`application_rule`:`application_rule`) ASSERT `application_rule`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`exclusion_id`:`exclusion_id`) ASSERT `exclusion_id`.`entityId` IS UNIQUE;
CREATE CONSTRAINT ON (`exclusion_id`:`exclusion_id`) ASSERT `exclusion_id`.`unique_index` IS UNIQUE;
